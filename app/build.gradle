ext {

    majVersion = 1
    minVersion = 32

    calculateVersionName = {
        return "${majVersion}.${minVersion}"
    }
    calculateVersionCode = {
        return 1 * 100000 + (majVersion * 100 + minVersion)
    }
}
buildscript {
    repositories {
    }

    dependencies {
    }
}


apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'io.fabric'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

repositories {
    mavenCentral()
}


android {
    signingConfigs {
        config {
            keyAlias 'ranobe'
            keyPassword 'gf6ds7fsfs7 '
            storePassword 'gf6ds7fsfs7 '
            storeFile file('C:/Users/rvildanov/Desktop/Android/ranobe.keystore')
        }
    }
    lintOptions {
        checkReleaseBuilds false
    }
    compileSdkVersion 28
    defaultConfig {
        applicationId "ru.profapp.ranobe"
        minSdkVersion 19
        targetSdkVersion 28
        multiDexEnabled true
        versionCode = calculateVersionCode()
        versionName = calculateVersionName()
        buildConfigField "String", "INTRO_KEY", "\"firstStart_1\""
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation":
                                     "$projectDir/schemas".toString()]
            }
        }
        signingConfig signingConfigs.config
    }
    buildTypes {
        release {
            minifyEnabled true
            buildConfigField "boolean", "USE_LOG", "false"
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    def date = new Date()
                    def formattedDate = date.format('dd_MM_HH-mm')
                    outputFileName = "${variant.applicationId}_${defaultConfig.versionName}-${variantData.variantConfiguration.baseName}.apk"
                }
            }
            signingConfig signingConfigs.config
        }
        debug {
            applicationIdSuffix '.debug'
            minifyEnabled false
            buildConfigField "boolean", "USE_LOG", "true"
            signingConfig signingConfigs.config
        }
    }
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
    sourceSets {
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.preference:preference:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.vectordrawable:vectordrawable:1.0.1'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.annotation:annotation:1.0.2'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.9'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.21'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'

    //Room
    implementation 'androidx.room:room-runtime:2.0.0'
    implementation 'androidx.room:room-rxjava2:2.0.0'
    androidTestImplementation 'androidx.room:room-testing:2.0.0'
    kapt "androidx.room:room-compiler:2.0.0"

    //Glide
    implementation 'com.github.bumptech.glide:glide:4.6.1'
    implementation 'com.github.bumptech.glide:okhttp3-integration:4.5.0'
    kapt 'com.github.bumptech.glide:compiler:4.8.0'

    // retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'

    // rxandroid
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'

    //firebase
    implementation 'com.google.firebase:firebase-ads:17.2.0'
    implementation 'com.google.firebase:firebase-core:16.0.8'

    // Leakcanary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.1'
    debugImplementation 'com.squareup.leakcanary:leakcanary-support-fragment:1.6.1'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.1'

    // common

    //implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'org.jsoup:jsoup:1.11.3'

    //stetho
    implementation 'com.facebook.stetho:stetho:1.5.0'
    implementation 'com.facebook.stetho:stetho-okhttp3:1.5.0'

    // intro
    implementation 'com.github.paolorotolo:appintro:v5.1.0'

    //rate
    implementation 'com.vorlonsoft:androidrate:1.2.1'

    //EasyFeedback
    implementation 'com.webianks.library:easy-feedback:1.0.5'

    //dagger 2
    implementation 'com.google.dagger:dagger:2.13'
    kapt 'com.google.dagger:dagger-compiler:2.13'

    //ChangeLog
    implementation 'de.cketti.library.changelog:ckchangelog:1.2.2'

    //Storage-chooser
    implementation 'com.github.codekidX:storage-chooser:2.0.4.4'

    //colorpicker
    implementation project(':libs:colorpicker')
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.1.1'

    // Google Auth and Drive Rest v3 API
    implementation 'com.google.android.gms:play-services-auth:16.0.1'
    implementation('com.google.api-client:google-api-client-android:1.23.0') {
        exclude group: 'org.apache.httpcomponents'
    }
    implementation('com.google.api-client:google-api-client:1.23.0') {
        exclude group: 'org.apache.httpcomponents'
    }
    implementation('com.google.apis:google-api-services-drive:v3-rev110-1.23.0') {
        exclude group: 'org.apache.httpcomponents'
    }
    implementation('com.google.oauth-client:google-oauth-client-jetty:1.23.0') {
        exclude group: 'org.apache.httpcomponents'
    }

    // EasyPermissions
    implementation 'pub.devrel:easypermissions:3.0.0'

    // Billing
    implementation 'com.android.billingclient:billing:1.2.2'

    //materialdrawer
    implementation 'co.zsmb:materialdrawer-kt:2.0.1'

}

apply plugin: 'com.google.gms.google-services'
